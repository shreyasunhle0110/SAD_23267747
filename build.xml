<?xml version="1.0" encoding="UTF-8"?>
<project name="securityProject" default="jar" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">
    <description>Builds, tests, and runs the project securityProject.</description>
    <import file="nbproject/build-impl.xml" />

    <!-- Define properties -->
    <property name="src.dir" value="src/main/java" />
    <property name="test.dir" value="src/test/java" />
    <property name="build.dir" value="build" />
    <property name="build.test.dir" value="build/test/java" />
    <property name="dist.dir" value="dist" />
    <property name="lib.dir" value="lib" />
    <property name="main.class" value="mainlibrary.MainLibrary" />
    <property name="aspectj.lib" value="${lib.dir}/aspectj" />
    <property name="test.report.dir" value="test-reports" />

    <!-- Define test classpath -->
    <path id="test.classpath">
        <pathelement location="${build.dir}" />
        <pathelement location="${build.test.dir}" />
        <fileset dir="${lib.dir}">
            <include name="junit-platform-console-standalone-1.10.2.jar" />
            <include name="junit-jupiter-api-5.10.2.jar" />
            <include name="junit-jupiter-engine-5.10.2.jar" />
            <include name="mockito-core-5.12.0.jar" />
            <include name="mockito-junit-jupiter-5.12.0.jar" />
            <include name="assertj-core-3.25.3.jar" />
            <include name="mockito*.jar" />
            <include name="*.jar" />
            <include name="jaxb-api*.jar" />
            <include name="jaxb-core*.jar" />
            <include name="jaxb-impl*.jar" />
            <include name="activation*.jar" />
        </fileset>
    </path>


    <!-- Clean build and dist directories -->
    <target name="clean">
        <delete dir="${build.dir}" />
        <delete dir="${dist.dir}" />
        <delete dir="${build.test.dir}" />
        <delete dir="${test.report.dir}" />
    </target>

    <!-- Compile sources -->
    <target name="compile">
        <mkdir dir="${build.dir}" />
        <javac srcdir="${src.dir}" destdir="${build.dir}" includeantruntime="false">
            <classpath>
                <fileset dir="${lib.dir}">
                    <include name="*.jar" />
                    <include name="jaxb-api*.jar" />
                    <include name="jaxb-core*.jar" />
                    <include name="jaxb-impl*.jar" />
                    <include name="activation*.jar" />
                </fileset>
            </classpath>
        </javac>
    </target>

    <!-- Compile aspects -->
    <target name="compile-aspects" depends="compile">
        <iajc source="1.8" target="1.8" fork="true" destdir="${build.dir}"
            classpathref="aspectj.classpath">
            <sourceroots>
                <pathelement location="${src.dir}" />
            </sourceroots>
        </iajc>
    </target>

    <!-- Compile test sources -->
    <target name="compile-tests" depends="compile">
        <mkdir dir="${build.test.dir}" />
        <javac srcdir="${test.dir}" destdir="${build.test.dir}" includeantruntime="false">
            <classpath refid="test.classpath" />
        </javac>
    </target>

    <!-- AspectJ classpath -->
    <path id="aspectj.classpath"></path>


    <!-- Create JAR with dependencies -->
    <target name="jar" depends="compile">
        <mkdir dir="${dist.dir}" />
        <mkdir dir="${dist.dir}/lib" />
        <copy todir="${dist.dir}/lib">
            <fileset dir="${lib.dir}">
                <include name="*.jar" />
                <include name="jaxb-api2.3.1.jar" />
                <include name="jaxb-core*.jar" />
                <include name="jaxb-impl*.jar" />
                <include name="activation*.jar" />
            </fileset>
        </copy>
        <jar destfile="${dist.dir}/securityProject.jar" basedir="${build.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main.class}" />
                <attribute name="Class-Path" value="lib/" />
            </manifest>
        </jar>
    </target>

    <!-- Run the project -->
    <target name="run" depends="compile">
        <java classname="${main.class}" fork="true">
            <classpath>
                <path refid="run.classpath" />
                <fileset dir="${lib.dir}">
                    <include name="*.jar" />
                    <include name="jaxb-api*.jar" />
                    <include name="jaxb-core*.jar" />
                    <include name="jaxb-impl*.jar" />
                    <include name="activation*.jar" />
                </fileset>
            </classpath>
        </java>
    </target>

    <!-- OWASP Dependency-Check setup -->
    <property name="dependency-check.home" value="${lib.dir}/dependency-check" />

    <path id="dependency-check.path">
        <pathelement location="${dependency-check.home}/dependency-check-ant.jar" />
        <fileset dir="${dependency-check.home}/lib">
            <include name="*.jar" />
        </fileset>
    </path>

    <taskdef resource="dependency-check-taskdefs.properties">
        <classpath refid="dependency-check.path" />
    </taskdef>

    <!-- Enhanced OWASP Dependency-Check Configuration -->
    <target name="dependency-check">
        <dependency-check
            projectname="${ant.project.name}"
            reportoutputdirectory="dependency-check-report"
            reportformat="ALL"
            failBuildOnCVSS="7"
            nvdApiKey="55cfceb2-0de8-4751-bdc4-62267584231f"
            assemblyAnalyzerEnabled="false"
            autoUpdate="false"
            dataDirectory="dependency-check-data"
            suppressionFile="security-suppressions.xml">

            <!-- Scan both application JAR and dependencies -->
            <fileset dir="${lib.dir}">
                <include name="**/*.jar" />
                <exclude name="**/junit*.jar" /> <!-- Exclude test dependencies -->
            </fileset>

            <fileset dir="${dist.dir}">
                <include name="**/securityProject.jar" />
            </fileset>

            <!-- Enable additional analyzers -->
            <analyzer classname="org.owasp.dependencycheck.analyzer.CentralAnalyzer" />
        </dependency-check>

        <!-- Fail build if vulnerabilities found -->
        <fail message="Critical vulnerabilities detected - check dependency-check-report">
            <condition>
                <resourcecount when="greater" count="0">
                    <fileset dir="dependency-check-report" includes="*.html" />
                </resourcecount>
            </condition>
        </fail>
    </target>

    <!-- New security audit target -->
    <target name="security-audit" depends="clean,compile,compile-tests,test,dependency-check"
        description="Full security audit workflow with testing">
        <echo message="Security audit and testing completed successfully" />
    </target>

    <!-- JaCoCo Configuration -->
    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
        <classpath>
            <pathelement location="${lib.dir}/org.jacoco.ant-0.8.12.jar" />
            <pathelement location="${lib.dir}/org.jacoco.core-0.8.12.jar" />
            <pathelement location="${lib.dir}/org.jacoco.report-0.8.12.jar" />
            <pathelement location="${lib.dir}/org.jacoco.agent-0.8.12.jar" />
        </classpath>
    </taskdef>

    <target name="junit" depends="compile-tests">
        <mkdir dir="${test.report.dir}" />
        <junit printsummary="yes" haltonfailure="yes" showoutput="yes">
            <classpath>
                <path refid="test.classpath" />
                <pathelement location="${build.test.dir}" />
            </classpath>
            <formatter type="xml" usefile="true" />
            <batchtest fork="yes" todir="${test.report.dir}">
                <fileset dir="${build.test.dir}">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="coverage" depends="junit">
        <mkdir dir="${test.report.dir}" />
        <mkdir dir="reports/jacoco" />
        <jacoco:coverage destfile="reports/jacoco.exec" excludes="mainlibrary/*Form.class">
            <junit printsummary="yes" haltonfailure="yes" showoutput="false">
                <classpath>
                    <path refid="test.classpath" />
                    <pathelement location="${build.test.dir}" />
                </classpath>
                <formatter type="xml" />
                <batchtest fork="yes" todir="${test.report.dir}">
                    <fileset dir="${build.test.dir}">
                        <include name="**/*Test.java" />
                    </fileset>
                </batchtest>
            </junit>
        </jacoco:coverage>
        <jacoco:report>
            <executiondata>
                <file file="reports/jacoco.exec" />
            </executiondata>
            <structure name="Security Project">
                <classfiles>
                    <fileset dir="${build.dir}" />
                </classfiles>
                <sourcefiles encoding="UTF-8">
                    <fileset dir="${src.dir}" />
                </sourcefiles>
            </structure>
            <html destdir="reports/jacoco" />
        </jacoco:report>
    </target>
</project>